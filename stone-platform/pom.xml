<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.stone</groupId>
    <artifactId>stone-platform</artifactId>
    <packaging>pom</packaging>
    <version>${project.revision}</version>
    <description>stone平台</description>

    <!-- 子模块 -->
    <modules>
        <module>stone-common</module>
        <module>stone-gateway</module>
        <module>stone-service-one</module>
        <module>stone-eureka-server</module>
        <module>stone-service-two</module>
        <module>stone-auth</module>
        <module>stone-gateway-zuul</module>
        <module>stone-service-three</module>
    </modules>

    <properties>
        <!-- Project revision -->
        <project.revision>1.1.0-SNAPSHOT</project.revision>
        <!--指定项目打包UTF-8编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--指定maven编译jdk版本 -->
        <maven.plugin.version>3.8.0</maven.plugin.version>
        <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <spring-boot.version>2.2.2.RELEASE</spring-boot.version>
        <spring-cloud-alibaba-dependencies.version>2.2.0.RELEASE</spring-cloud-alibaba-dependencies.version>
        <spring-cloud-dependencies.version>Hoxton.SR1</spring-cloud-dependencies.version>
        <swagger.core.version>1.5.22</swagger.core.version>

        <!--依赖版本 -->
        <mybatis-plus.version>3.3.1.tmp</mybatis-plus.version>
        <druid.version>1.1.22</druid.version>
        <!--
        本地 mysql 连接，版本冲突
        <mysql.connector.version>8.0.18</mysql.connector.version>-->
        <mysql.connector.version>5.1.6</mysql.connector.version>
        <swagger.core.version>1.5.22</swagger.core.version>
        <swagger.fox.version>2.9.2</swagger.fox.version>
        <knife4j.version>2.0.2</knife4j.version>
        <httpclient.version>4.5.3</httpclient.version>
        <hutool.version>5.1.4</hutool.version>
        <easy.captcha.version>1.6.2</easy.captcha.version>
        <dubbo.version>0.2.0</dubbo.version>
        <easyexcel.version>2.1.6</easyexcel.version>
        <transmittable.version>2.2.0</transmittable.version>
    </properties>

    <!-- 构件部署仓库 -->
    <!--<distributionManagement>
        <repository>
            <id>releases</id>
            <name>发布版本仓库</name>
            <url>http://172.16.102.120:8081/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>快照版本仓库</name>
            <url>http://172.16.102.120:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>-->

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--excel工具 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>
            <!--swagger 依赖 -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <!--swagger 依赖 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.fox.version}</version>
            </dependency>
            <!--knife4j是为Java MVC框架集成Swagger生成Api文档的增强 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!--mybatis plus 注解包-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!--mybatis-plus依赖 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- druid 连接池 -->
            <!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--mysql 驱动 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>
            <!--http客户端 -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!--hutool工具包 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!--dubbo -->
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <!-- 验证码生成工具 -->
            <dependency>
                <groupId>com.github.whvcse</groupId>
                <artifactId>easy-captcha</artifactId>
                <version>${easy.captcha.version}</version>
            </dependency>
            <!-- 阿里 thread-local 解决线程池传递问题 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${transmittable.version}</version>
            </dependency>

            <!--以下自封装模块 -->
            <!-- async 异步支持-->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-common-async</artifactId>
                <version>${project.revision}</version>
            </dependency>
            <!-- auth-->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-auth</artifactId>
                <version>${project.revision}</version>
            </dependency>
            <!-- 核心 core-->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-common-core</artifactId>
                <version>${project.revision}</version>
            </dependency>
            <!-- datasource-->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-common-datasource</artifactId>
                <version>${project.revision}</version>
            </dependency>
            <!-- dubbo -->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-common-dubbo</artifactId>
                <version>${project.revision}</version>
            </dependency>
            <!-- kafka -->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-common-kafka</artifactId>
                <version>${project.revision}</version>
            </dependency>
            <!-- model 实体类-->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-common-model</artifactId>
                <version>${project.revision}</version>
            </dependency>
            <!-- Excel poi 导入导出-->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-common-poi</artifactId>
                <version>${project.revision}</version>
            </dependency>
            <!-- redis -->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-common-redis</artifactId>
                <version>${project.revision}</version>
            </dependency>
            <!-- swagger -->
            <dependency>
                <groupId>com.stone</groupId>
                <artifactId>stone-common-swagger</artifactId>
                <version>${project.revision}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--测试依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--配置文件处理器 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}-${project.revision}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.plugin.version}</version>
                    <configuration>
                        <target>${maven.compiler.target}</target>
                        <source>${maven.compiler.source}</source>
                        <encoding>UTF-8</encoding>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>